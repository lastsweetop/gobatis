// Code generated by "gobatis -type=User"; DO NOT EDIT.
package mapper

import "gobatis/model"
import "gobatis/model"
import "gobatis/model"
import "gobatis/model"
import "gobatis/model"
import "gobatis/model"
import "gobatis/model"
import "gobatis/model"
import "gobatis/model"
import "gobatis/model"
import "gobatis/model"

type UserMapper struct {
}

func (this *UserMapper) GetAll() []model.User {
	rows, err := db.Query("select id,account from user")
	defer rows.Close()
	results := make([]model.User, 0)
	if err != nil {
		log.Println(err.Error())
		return results
	}
	for rows.Next() {
		temp := model.User{}
		rows.Scan(&temp.Id, &temp.Account)
		results = append(results, temp)
	}
	return results
}

func (this *UserMapper) GetUser(param *model.UserParam) *model.User {
	rows, err := db.Query("select id,account from user where id=?", param.Id)
	defer rows.Close()

	if err != nil {
		log.Println(err.Error())
		return results
	}
	if rows.Next() {
		temp := model.User{}
		rows.Scan(&temp.Id, &temp.Account)
		return &temp
	}
	return nil
}
